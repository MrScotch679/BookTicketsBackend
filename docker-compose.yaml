services:
  app:
    tty: true
    restart: always
    image: book-tickets
    container_name: book-tickets
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - application
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/src/app
    command: air -c .air.toml

  db:
    image: postgres:alpine
    container_name: book-tickets-db
    environment:
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data
    networks:
      - application
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
    application:

volumes:
  postgres-db: